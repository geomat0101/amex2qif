#!/usr/bin/env python

import os
import sys
import csv
import argparse

dining = ()

catmap = {}   

parser = argparse.ArgumentParser(
    prog='amex2qif',
    description='''Convert American Express CSV export files to QIF format''',
    epilog='''If you provide a 'categories.py' file in the same directory
              as the amex2qif program, it will automatically be used. 
              The file should have two entries: 

                dining = (list of string names of restaurant names)

                catmap = {dictionary, key=string name of vendor, value=category (string)

                All vendors matching one of the dining items will be set to the category 'Dining'.
           ''')
parser.add_argument('csvfilename', type=str)
parser.add_argument('--oldstyle', action="store_true", default=False,
                    help="Use the old style format with card-holder name in column 4e")

args = parser.parse_args()

edir = os.path.dirname(os.path.realpath(__file__))
if os.path.exists(os.path.join(edir, 'categories.py')):
   sys.path.append(edir)
   from categories import dining, catmap

with open(args.csvfilename, 'r') as csvfile:
   csvreader = csv.reader(csvfile, delimiter=',', quotechar='"')
   for i, row in enumerate(csvreader):
      if len(row) == 0:
         # Ignore blank lines
         continue
      if len(row) < 5:
         print >> sys.stderr, "Error in line %d: only %d field(s)!" % (i, len(row))
         continue

      if args.oldstyle:
         # 01/29/2016  Fri,,"RESTAURANT","Card Holder Name","XXXX-XXXXXX-NNNNN",,,3.27,,,,,,,,
         # COLS:  0:Date, 1:Ref?, 2:Payee, 3:Card-holder-name, 4:Card-number, 7:Amount
         date = row[0].split()[0]
         ref = None
         payee = row[2]
         customer = row[3].split()[0]
         amount = -float(row[7])
         memo = None
      else:
         try:
             date = row[0]
             ref = row[1].split()[1]
             amount = float(row[2])
             payee = row[3]
             memo = row[4]
             customer = None
             # customer = row[3].split()[0]
         except:
            print "This file does not appear to be in the standard "
            print "Amex CSV file format.  Try adding the --oldstyle flag"
            sys.exit()

      category = ''

      for d in dining:
         if d in payee:
            category = 'Dining'

      for p,cat in catmap.items():
         if p in payee:
            category = cat

      if customer:
         if memo:
            memo += " (%s)" % customer
         else:
            memo = customer

      if memo and ref:
         memo += " Ref: %s" % ref

      print "D%s" % date
      print "T%.2f" % amount
      print "P%s" % payee
      print "L%s" % category
      if memo:
         print "M%s" % memo
      print "^"
